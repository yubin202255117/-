# -*- coding: utf-8 -*-
"""palindrome의 사본

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t3ocHtikF8QdCtBNN7LXvUG1ChfrHlck
"""

def longest_palindrome(nums):
  palin=[]
  for i in range(1,len(nums)-1):
    count=1
    if i>=len(nums)/2:
      p=i-1
      q=i+1
      for k in range(len(nums)-1-i):
        if nums[p]==nums[q]:
          count+=2
          p-=1
          q+=1
        else:
          break
    else:
      p=i-1
      q=i+1
      for k in range(i):
        if nums[p]==nums[q]:
          count+=2
          p-=1
          q+=1
        else:
          break
    palin.append(count)

  for i in range(0,len(nums)-1):
    count=1
    p=i-1
    q=i+2
    if nums[i]==nums[i+1]:
      count+=1
      if i+1>=len(nums)/2:
        for k in range(len(nums)-i-2):
          if nums[p]==nums[q]:
            count+=2
            p-=1
            q+=1
          else:
            break
      else:
        for k in range(i):
          if nums[p]==nums[q]:
            count+=2
            p-=1
            q+=1
          else:
            break
    palin.append(count)

  return max(palin)
print(longest_palindrome(nums=[2,1,3,1,2,4,4,2,1,2]))
print(longest_palindrome(nums=[1,4,2,3,3,1,1,2,5]))
print(longest_palindrome(nums=[1,1,1,1,1,1,1]))
print(longest_palindrome(nums=[1,2,3,3,2,1,5,5,1]))
print(longest_palindrome(nums=[2,2,2,3,2,2,2,1,2,3,5,8]))
print(longest_palindrome(nums=[2,1,2,3,4,5,6,7,8,9]))
print(longest_palindrome(nums=[1,1,1,1,1,3,3,3,3,34,4,4,4,4,4,45,5,5,7,7,7,8,99,5]))
print(longest_palindrome(nums=[1,1,1,1,1,2,2,1,1,1,1]))
print(longest_palindrome(nums=[1,1,1,1,1,2]))
print(longest_palindrome(nums=[1,1,11,1,1,1,1,1,1,1,3,3,3,33,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,8,1,8,1,8,1]))

